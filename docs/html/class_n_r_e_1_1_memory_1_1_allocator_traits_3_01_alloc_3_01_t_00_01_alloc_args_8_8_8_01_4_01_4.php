<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Memory: NRE::Memory::AllocatorTraits&lt; Alloc&lt; T, AllocArgs... &gt; &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Memory</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php">AllocatorTraits&lt; Alloc&lt; T, AllocArgs... &gt; &gt;</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Memory::AllocatorTraits&lt; Alloc&lt; T, AllocArgs... &gt; &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for NRE::Memory::AllocatorTraits&lt; Alloc&lt; T, AllocArgs... &gt; &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.png" usemap="#NRE::Memory::AllocatorTraits_3C_20Alloc_3C_20T_2C_20AllocArgs..._20_3E_20_3E_map" alt=""/>
  <map id="NRE::Memory::AllocatorTraits_3C_20Alloc_3C_20T_2C_20AllocArgs..._20_3E_20_3E_map" name="NRE::Memory::AllocatorTraits&lt; Alloc&lt; T, AllocArgs... &gt; &gt;_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4_1_1_rebinded.php">Rebinded</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:acbd51317e9cbd28f33205547b9e040be"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#acbd51317e9cbd28f33205547b9e040be">AllocatorType</a> = Alloc&lt; T, AllocArgs... &gt;</td></tr>
<tr class="separator:acbd51317e9cbd28f33205547b9e040be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78aa851f3a8dc304414e750f1f1f158e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a78aa851f3a8dc304414e750f1f1f158e">ValueType</a> = T</td></tr>
<tr class="separator:a78aa851f3a8dc304414e750f1f1f158e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f73cde9c99e2ab816fe69e2600681e4"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a> = T *</td></tr>
<tr class="separator:a7f73cde9c99e2ab816fe69e2600681e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a450a4a99715b80fe28e4c0c415a157d5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a450a4a99715b80fe28e4c0c415a157d5">ConstPointer</a> = const T *</td></tr>
<tr class="separator:a450a4a99715b80fe28e4c0c415a157d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f223d5595247900e62f2ee05de7f7d0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a> = std::size_t</td></tr>
<tr class="separator:a7f223d5595247900e62f2ee05de7f7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f39fd287b898c991dafee6e9d43be12"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a8f39fd287b898c991dafee6e9d43be12"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a8f39fd287b898c991dafee6e9d43be12">Rebind</a> = typename Rebinded&lt; K &gt;::Type</td></tr>
<tr class="separator:a8f39fd287b898c991dafee6e9d43be12"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6781b6da52549beb2df1a91013a377bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a6781b6da52549beb2df1a91013a377bf">getMaxSize</a> () const noexcept</td></tr>
<tr class="separator:a6781b6da52549beb2df1a91013a377bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a206d2739b7cb99d27af15b226d2eeb71"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a206d2739b7cb99d27af15b226d2eeb71">getAddress</a> (<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a78aa851f3a8dc304414e750f1f1f158e">ValueType</a> &amp;object) const noexcept</td></tr>
<tr class="separator:a206d2739b7cb99d27af15b226d2eeb71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05bf60002102a9b419ff32b93cca043c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a450a4a99715b80fe28e4c0c415a157d5">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a05bf60002102a9b419ff32b93cca043c">getAddress</a> (<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a78aa851f3a8dc304414e750f1f1f158e">ValueType</a> const &amp;object) const noexcept</td></tr>
<tr class="separator:a05bf60002102a9b419ff32b93cca043c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f01ece6d7a56473b2b378116c4b281a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a9f01ece6d7a56473b2b378116c4b281a">allocate</a> (<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a> n=1)</td></tr>
<tr class="separator:a9f01ece6d7a56473b2b378116c4b281a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa9d2cef262827294a84fac7e3cc7b40"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#afa9d2cef262827294a84fac7e3cc7b40">deallocate</a> (<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a> p)</td></tr>
<tr class="separator:afa9d2cef262827294a84fac7e3cc7b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab52a5e3425147884f0e6782deddac77f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#ab52a5e3425147884f0e6782deddac77f">deallocate</a> (<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a> p, <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a> n)</td></tr>
<tr class="separator:ab52a5e3425147884f0e6782deddac77f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7cc004b9c731bb620a1ec261a0a277"><td class="memTemplParams" colspan="2">template&lt;class K , class... Args&gt; </td></tr>
<tr class="memitem:a1a7cc004b9c731bb620a1ec261a0a277"><td class="memTemplItemLeft" align="right" valign="top">K *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a1a7cc004b9c731bb620a1ec261a0a277">construct</a> (K *p, Args &amp;&amp;...args)</td></tr>
<tr class="separator:a1a7cc004b9c731bb620a1ec261a0a277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fde1294b99e6d45bea2638dfb0eb896"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9fde1294b99e6d45bea2638dfb0eb896"><td class="memTemplItemLeft" align="right" valign="top">K *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a9fde1294b99e6d45bea2638dfb0eb896">destroy</a> (K *p)</td></tr>
<tr class="separator:a9fde1294b99e6d45bea2638dfb0eb896"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="acbd51317e9cbd28f33205547b9e040be"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#acbd51317e9cbd28f33205547b9e040be">AllocatorType</a> =  Alloc&lt;T, AllocArgs...&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocator type </p>

</div>
</div>
<a class="anchor" id="a450a4a99715b80fe28e4c0c415a157d5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a450a4a99715b80fe28e4c0c415a157d5">ConstPointer</a> =  const T*</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The pointer on constant allocated type </p>

</div>
</div>
<a class="anchor" id="a7f73cde9c99e2ab816fe69e2600681e4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a> =  T*</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The pointer on allocated type </p>

</div>
</div>
<a class="anchor" id="a8f39fd287b898c991dafee6e9d43be12"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a8f39fd287b898c991dafee6e9d43be12">Rebind</a> =  typename Rebinded&lt;K&gt;::Type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The rebinded allocator type </p>

</div>
</div>
<a class="anchor" id="a7f223d5595247900e62f2ee05de7f7d0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a> =  std::size_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocator size type </p>

</div>
</div>
<a class="anchor" id="a78aa851f3a8dc304414e750f1f1f158e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::<a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a78aa851f3a8dc304414e750f1f1f158e">ValueType</a> =  T</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a9f01ece6d7a56473b2b378116c4b281a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a> <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::allocate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a>&#160;</td>
          <td class="paramname"><em>n</em> = <code>1</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Allocate n * sizeof(T) bytes </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>the number of object </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a pointer on the first allocated bytes </dd></dl>

</div>
</div>
<a class="anchor" id="a1a7cc004b9c731bb620a1ec261a0a277"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<div class="memtemplate">
template&lt;class K , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">K* <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::construct </td>
          <td>(</td>
          <td class="paramtype">K *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Construct a K-type object in the given pointer with given arguments </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pointer to construct the object </td></tr>
    <tr><td class="paramname">args</td><td>the construction arguments </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the input pointer </dd></dl>

</div>
</div>
<a class="anchor" id="afa9d2cef262827294a84fac7e3cc7b40"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::deallocate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a>&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Deallocate a pointer given by an allocate call </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pointer on the first bytes allocated </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab52a5e3425147884f0e6782deddac77f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::deallocate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a>&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a>&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Deallocate a pointer given by an allocate call </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pointer on the first bytes allocated </td></tr>
    <tr><td class="paramname">n</td><td>the number of object allocated </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9fde1294b99e6d45bea2638dfb0eb896"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">K* <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::destroy </td>
          <td>(</td>
          <td class="paramtype">K *&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Destroy an given to the given pointer </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the object address </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the input pointer </dd></dl>

</div>
</div>
<a class="anchor" id="a206d2739b7cb99d27af15b226d2eeb71"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f73cde9c99e2ab816fe69e2600681e4">Pointer</a> <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::getAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a78aa851f3a8dc304414e750f1f1f158e">ValueType</a> &amp;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Retrieve the address of an object </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">object</td><td>the object to return his address </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the object's address </dd></dl>

</div>
</div>
<a class="anchor" id="a05bf60002102a9b419ff32b93cca043c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a450a4a99715b80fe28e4c0c415a157d5">ConstPointer</a> <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::getAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a78aa851f3a8dc304414e750f1f1f158e">ValueType</a> const &amp;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Retrieve the address of an object </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">object</td><td>the object to return his address </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the object's address </dd></dl>

</div>
</div>
<a class="anchor" id="a6781b6da52549beb2df1a91013a377bf"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class, class... &gt; class Alloc, class T , class... AllocArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits_3_01_alloc_3_01_t_00_01_alloc_args_8_8_8_01_4_01_4.php#a7f223d5595247900e62f2ee05de7f7d0">SizeType</a> <a class="el" href="class_n_r_e_1_1_memory_1_1_allocator_traits.php">NRE::Memory::AllocatorTraits</a>&lt; Alloc&lt; T, AllocArgs... &gt; &gt;::getMaxSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum allocation size </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Memory/src/Memory/Allocator/<a class="el" href="_n_r_e___allocator_traits_8hpp_source.php">NRE_AllocatorTraits.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
